Revision history for Complete-Getopt-Long

0.26    2014-12-29 (PERLANCAR)

	- Split --foo=val, some fixes in producing 'parsed_opts' for
	  completion routine.


0.25    2014-12-28 (PERLANCAR)

	- Provide 'parsed_opts' for completion routine.


0.24    2014-12-27 (PERLANCAR)

	- No functional changes.

	- More tweaking of log messages.


0.23    2014-12-26 (PERLANCAR)

	- No functional changes.

	- Tweak logging message, exclude extras (too long, in
	  Perinci::CmdLine it contains 'cmdline' object).


0.22    2014-12-26 (PERLANCAR)

	- No functional changes.

	- Tweak logging messages to make it easier to debug (preparing
	  peri-test-comp).


0.21    2014-12-25 (PERLANCAR)

        - No functional changes.

        - Fix sorting in tests [CT].


0.20    2014-12-24 (PERLANCAR)

	- Add note that we deliberately do not provide 'ci' option in this
	  module.

	- Follow convention of Complete 0.06.


0.19    2014-12-20 (PERLANCAR)

        [REMOVED FEATURES]

        - Before 0.06, 'completion' argument can also be a hashref. This is no
          longer supported. 'completion' must be a coderef. We have deprecated
          this, removed this from the doc, and supported this for a while but
          it's now time to remove the feature, to simplify stuffs.

        [INCOMPATIBLE CHANGES]

        - In order to simplify writing completion routines, the keys from
          'extras' are now merged into the final %args for the completion
          routine. Before it was put into a single key 'extras' in the %args.


0.18    2014-12-05 (PERLANCAR)

        - Delegate '~user/' completion handling to Complete::Util 0.14's
          complete_file().

        - Do case-insensitive complete_file(), for convenience.


0.17    2014-11-28 (PERLANCAR)

	- Adjust to Complete::Bash 0.12 (words are now put in 'words' key
	  instead of 'completion' key).


0.16    2014-11-18 (PERLANCAR)

        - Make file completion work more like bash: ~foo/blah<tab> works,
          fallback to file if ~user or $var doesn't match anything, [AB]<tab>
          works like [AB]*.


0.15    2014-11-10 (PERLANCAR)

        - Don't produce --nox and --no-x for single letter spec 'x!'.


0.14    2014-09-04 (PERLANCAR)

        - No functional changes.

        - Make dependency to 'Complete::Getopt::Long' optional to shorten the
          prerequisite list.


0.13    2014-08-06 (SHARYANTO)

        - Provide 'words' and 'cword' to completion routine.


0.12    2014-07-29 (SHARYANTO)

        - [ux] When only completing option names, give proper option name
          escaping.


0.11    2014-07-28 (SHARYANTO)

        [ENHANCEMENTS]

        - Support completion of bundled short options.

        - Provide 'nth' argument for completion routine, so it can know that an
          option has been given n times (e.g. in '--foo 1 --foo ^' the first foo
          has nth=0, the second nth=1).


0.10    2014-07-27 (SHARYANTO)

        - Some fixes.

        [INCOMPATIBLE CHANGES]

        - To avoid cascading parent_args within parent_args (and so on), replace
          it with 'extras'. Now you can chuck all the extra stuffs you want
          to pass to completion routine here.


0.09    2014-07-27 (SHARYANTO)

        - Support the deprecated 'completion' argument as hash. Undocumented and
          will be removed in the future though.


0.08    2014-07-27 (SHARYANTO)

        - [ux] Proper escaping mode when completing environment variables.


0.07    2014-07-27 (SHARYANTO)

        - [ux] Completion routine can now return undef so that
          complete_cli_arg() calls default/fallback completion routine that
          complets from environment vars ('$foo'), usernames ('~foo'), or files.


0.06    2014-07-27 (SHARYANTO)

        - Completion routine now gets extra information/arguments. In addition
          to 'word', it now also gets: type, opt, ospec, argpos, parent_args,
          seen_opts.

        [INCOMPATIBLE CHANGES]

        - 'completion' argument is now a single coderef instead of hash of
          coderefs/arrays. I think this is conceptually simpler and does not
          force the user to specify for every opt spec if she doesn't need to.


0.05    2014-07-26 (SHARYANTO)

        - Add option: fallback_completion.

        - Provide default fallback_completion that can complete environment
          variables ($foo), Unix usernames (~foo), wildcards (foo*), or
          filenames.

        - Other fixes.


0.04    2014-07-26 (SHARYANTO)

        - Change algorithm so things become simpler.

        - Now does not repeat mentioned non-repeatable option names (including
          aliases and abbreviated), e.g. when you have getopt_spec =>
          {'help|h'=>sub{}, 'hour=i'=>sub{}, 'foo=s'=>\@ary}, then if cmdline is
          (^ marks the point of completion) '--he --h^' or '-h --h^' then it
          will complete to ['--hour'] only because '--help' has been mentioned.
          But repeatable option can be repeated, e.g. '--foo --^' will complete
          to ['--foo', '--help', '--hour'].


0.03    2014-07-24 (SHARYANTO)

        - Handle equal sign (--foo=<tab>).


0.02    2014-07-22 (SHARYANTO)

        - [Bugfix] Fix endless loop after flag option.


0.01    2014-07-22 (SHARYANTO)

        - First release.
